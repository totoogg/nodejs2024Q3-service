// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String @id @default(uuid()) @db.Uuid
  login     String @unique
  password  String
  version   Int    @default(1)
  createdAt Int
  updatedAt Int
}

model Artist {
  id     String  @id @default(uuid()) @db.Uuid
  name   String
  grammy Boolean

  track     Track[]
  album     Album[]
  favorites Favorites[]
}

model Track {
  id       String  @id @default(uuid()) @db.Uuid
  name     String
  artistId String?
  albumId  String?
  duration Int

  artist    Artist?     @relation(fields: [artistId], references: [id], onDelete: SetNull)
  album     Album?      @relation(fields: [albumId], references: [id], onDelete: SetNull)
  favorites Favorites[]
}

model Album {
  id       String  @id @default(uuid()) @db.Uuid
  name     String
  year     Int
  artistId String?

  artist    Artist?     @relation(fields: [artistId], references: [id], onDelete: SetNull)
  favorites Favorites[]
  track     Track[]
}

model Favorites {
  id      Int      @id @default(autoincrement())
  artists Artist[]
  albums  Album[]
  tracks  Track[]
}
